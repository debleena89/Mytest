grep "input" sequence > inputline
while read line
do
   invar="$(echo $line|cut -d ':' -f 2)" 
   echo $invar >> inputseq
done < inputline

#|cut -d ':' -f 2 )"
#echo $invar > inputseq

#consvar="$(grep "cons" sequence|cut -d ':' -f 2 )"
#echo $consvar >> inputseq


seq="$(grep "seq" sequence|cut -d ':' -f 1 )"
seq="$(echo $seq| cut -d '=' -f 2- )"
echo "$seq;">> inputseq

#-------------------------------
upval="$(echo $seq | awk 'BEGIN {FS="<=|<"} {print $2}')"
upval="$(echo $upval | cut -d ')' -f 1)"

checksign="$(echo $seq|grep -c "<=")"


if [ $checksign -eq 0 ]
then
      upval=`expr $upval - 2`
else
      upval=`expr $upval - 1`
fi	  

echo $upval
#-----------------------------------

dnval="$(echo $seq |awk 'BEGIN {FS=">=|>"} {print $2}')"
dnval="$(echo $dnval | cut -d ')' -f 1)"

checksign="$(echo $seq|grep -c ">=")"

echo $dnval
if [ $checksign -eq 0 ]
then
      dnval=`expr $dnval + 1`
fi

echo $dnval
#--------------------------------


grep "input" sequence|cut -d ':' -f 2 > outseq
grep "output" sequence|cut -d ':' -f 2 >> outseq
grep "seq" sequence|cut -d ':' -f 2 >> outseq
consChecker outseq > check.ys


consChecker inputseq > output.ys

while read line 
do
   invar="$(echo $line|cut -d ':' -f 2)"
   onlyvar="$(echo $invar|cut -d ' ' -f 2- )"
   echo "check $onlyvar" >> inputseq
done < inputline


echo "(check)" >> output.ys
echo "(show-model)" >> output.ys

chmod +x yices
yices output.ys > logInputP

grep '=' logInputP >> checkline
grep -w ')' logInputP>log

for i in $(cat logInputP)
	do
	    echo $i>>log

	done

grep ')' log > extract

for i in $(cat extract)
	do
	    a="$(echo $i|cut -d ')' -f 1) "
		pre=apwd
		mystring=$mystring$a
   done

gcc test.c
a="$(./a.out $mystring)"
cat check.ys > checkinterm.ys

./checkscript

rm  output.ys extract outseq checkline check.ys  log a.out

for i in $(seq 1 1)
do

cat checkinterm.ys > check.ys

grep "=" logInputP > interm
sed -i 's/=/!=/g' interm
#cat interm
sed -i 's/(/ /g' interm
t="$(awk ' { t = $1; $1 = $2; $2 = t; print; } ' interm )"
echo "($t;"> interm>>inputseq
consChecker inputseq > output.ys
echo "(check)" >> output.ys
echo "(show-model)" >> output.ys
yices output.ys > logInputP
cat logInputP

grep '=' logInputP >> checkline
grep -w ')' logInputP>log

for i in $(cat logInputP)
    do
    echo $i>>log

    done
grep ')' log > extract
mystring=' '
for i in $(cat extract)
   do
   a="$(echo $i|cut -d ')' -f 1) "
   pre=apwd
   mystring=$mystring$a
  done
 gcc test.c
a="$(./a.out $mystring)"

#-----------------------------------------------
out="$(grep "output" sequence|cut -d ':' -f 2 )"
onlyoutvar="$(echo $out |cut -d ' ' -f 2- )"
#getCount="$(echo $onlyoutvar|wc -c ',' )"
#echo $getCount

num=`echo $onlyoutvar |  awk 'BEGIN{FS=","} {print NF?NF-1:0} '`
num=`expr $num + 1`

for i in `seq $num`
do
  var="$(echo $onlyoutvar|cut -d ' ' -f $i)"
  val="$(echo $a|cut -d ' ' -f $i)"
  if [ $i -lt $num ]
     then
      var="$(echo $var|cut -d ',' -f 1)"
      echo "(= $var $val)" >> checkline
#echo $var
  else
       var="$(echo $var|cut -d ';' -f 1)"
     echo "(= $var $val)" >> checkline
#echo $var
   fi
done

#echo "(= Temp $a)" >> checkline

while read line
do
    echo "(assert$line)" >> check.ys
done < checkline

echo "(check)" >> check.ys
echo "(show-model)" >> check.ys

yices check.ys

#------------------------------------------------
#rm  output.ys extract  checkline check.ys  log a.out
done
